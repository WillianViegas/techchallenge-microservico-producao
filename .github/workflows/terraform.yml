name: Terraform AWS
'on':
  push:
    branches:
      - main
  pull_request: null

permissions:
  contents: read

env:
  AWS_REGION: '${{secrets.AWS_REGION}}'
  AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
  AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
  ROOT_PATH: '${{ github.workspace }}/src/techchallenge-microservico-producao/terraform/'
 
jobs:
  terraform-plan:
    name: 'Terraform plan'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: '${{ secrets.TF_API_TOKEN }}'
          
      - name: Terraform Init
        run: terraform init -reconfigure
        working-directory: '${{ env.ROOT_PATH }}'
        
      - name: Terraform Plan
        run: terraform plan
        working-directory: '${{ env.ROOT_PATH }}'
        
  terraform-apply:
      name: 'Terraform apply'
      runs-on: ubuntu-latest
      needs: terraform-plan
      if: ${{ success() }}
      
      environment: dev
      defaults:
        run:
          shell: bash
          
      steps:
        - name: Checkout
          uses: actions/checkout@v4.1.1
          
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            cli_config_credentials_token: '${{ secrets.TF_API_TOKEN }}'

        - name: Terraform Init
          run: terraform init -reconfigure
          working-directory: '${{ env.ROOT_PATH }}'
          
        - name: Terraform Apply
          run: terraform apply -auto-approve
          working-directory: '${{ env.ROOT_PATH }}'

        - name: Terraform Destroy
          run: terraform destroy -auto-approve
          working-directory: '${{ env.ROOT_PATH }}'
